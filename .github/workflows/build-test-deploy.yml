name: Build, Test & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  accept:
    name: Accept
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Accept
        run: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          components: rustfmt, clippy
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --locked --all-features --all-targets

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
      - name: Set up Rust
        uses: ./.github/actions/setup-rust
      - run:  npm install ganache-cli@latest --global
      - name: Build and run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all-features --all-targets
      - name: Build and run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all-features --doc

  codecov:
    # See <https://doc.rust-lang.org/nightly/unstable-book/compiler-flags/source-based-code-coverage.html>
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        id: setup_rust
        with:
          components: llvm-tools-preview
      - name: Install cargo-binutils
        uses: actions-rs/install@v0.1.2
        with:
          crate: cargo-binutils
          version: latest
      - name: Install rustfilt
        uses: actions-rs/install@v0.1.2
        with:
          crate: rustfilt
          version: latest
      - run:  npm install ganache-cli@latest --global
      - name: Test with coverage
        env:
          RUSTFLAGS: -Zinstrument-coverage
          LLVM_PROFILE_FILE: profile-%m.profraw
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all-features --all-targets --no-fail-fast
      - name: Doc test with coverage
        env:
          RUSTFLAGS: -Zinstrument-coverage
          LLVM_PROFILE_FILE: profile-%m.profraw
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all-features --doc --no-fail-fast
      - name: Creating coverage report
        env:
          RUSTFLAGS: -Zinstrument-coverage
        run: |
          # Show files
          ls -lah
          # Merge execution traces
          cargo profdata -- merge -sparse $(find . -iname "profile-*.profraw") -o profile.profdata
          # Export to lcov format for codecov
          # NOTE: The inner cargo test command needs to be the same as above
          cargo cov -- export \
            --format=lcov > profile.lcov \
            --instr-profile=profile.profdata \
            $( \
              for file in \
                $( \
                  cargo test --all-features --all-targets --no-run --message-format=json \
                    | jq -r "select(.profile.test == true) | .filenames[]" \
                    | grep -v dSYM - \
                ); \
              do \
                printf "%s %s " -object $file; \
              done \
            )
      - name: Submit to codecov.io
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Optional for public repos
          flags: test
          fail_ci_if_error: true
          verbose: true

  security_audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
